--- 
# TinyTapeout project information
project:
  wokwi_id:    374778387606763521        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
# Source files must be in ./src and you must list each source file separately
#  source_files:        
#    - counter.v
#    - decoder.v
#  top_module:  "tt_um_example"      # Put the name of your top module here, must start with "tt_um_". Make it unique by including your github username

# How many tiles your design occupies? A single tile is about 167x108 uM.
  tiles: "1x1"    # Valid values: 1x1, 1x2, 2x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 4

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation: 
  author:       "Rebeca Orellana, Abigail Alarcon"      # Your name
  title:        "PWM Quisquilloso"      # Project title
  language:     "Wokwi" # other examples include Verilog, Amaranth, VHDL, etc
  description:  "Regulates the power or velocity at which a device functions. This PWM was designed to work with an extern clock of 12.5 KHz so the exit has a frequency of 50 Hz and it can control a servomotor."      # Short description of what your project does

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: | Receives an 8 bits entrance, which the first is conected from a clock made with logicgates. the next bit is linked follow the clock and like this sequentially, with or entrance that can be compare the input to form one number in binary language, for indicate the time. This has a led lights conected in the outputs to check the clock account.
  Recibe una entrada de 8 bits de las cuales, la primera va conectada a un reloj hecho a base de compuertas l√≥gicas, el siguiente bit va enlazado a la continjuacion del reloj y asi sucesivamente, con entradas or que permiten comparar los numeros de entrada hasta formar un solo numero escrito en binario que indica el tiempo. Lleva conectada unas luces led en los output que verifican la cuenta del reloj.
      Explain how your project works

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  | 
  ingresar un valor en las entradas entre 0 y 255 para asi determinbar ekl ciclo de trabajo
      Explain how to test your project

# A description of what the inputs do (e.g. red button, SPI CLK, SPI MOSI, etc).
  inputs:               
    - none
    - none
    - none
    - none
    - none
    - none
    - none
    - none
# A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    - segment a
    - segment b
    - segment c
    - segment d
    - segment e
    - segment f
    - segment g
    - dot
# A description of what the bidirectional I/O pins do (e.g. I2C SDA, I2C SCL, etc)
  bidirectional:
    - PWM
    - none
    - none
    - none
    - none
    - none
    - none
    - none

# The following fields are optional
  tag:          ""      # comma separated list of tags: test, encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  ""      # Describe any external hardware needed
  discord:      ""      # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     0       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository (must be 512kb or less)
